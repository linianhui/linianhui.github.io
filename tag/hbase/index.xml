<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hbase on Timetombs</title><link>https://linianhui.github.io/tag/hbase/</link><description>Recent content in Hbase on Timetombs</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 20 Nov 2022 14:49:58 +0800</lastBuildDate><atom:link href="https://linianhui.github.io/tag/hbase/index.xml" rel="self" type="application/rss+xml"/><item><title>[HBase] Best Practice</title><link>https://linianhui.github.io/hbase/best-practice/</link><pubDate>Sat, 03 Sep 2022 10:01:00 +0800</pubDate><guid>https://linianhui.github.io/hbase/best-practice/</guid><description>&lt;h1 id="rowkey">
&lt;i id="locator-rowkey" class="header-locator">&lt;/i>
&lt;a href="#rowkey" class="article-h-a">1 RowKey&lt;/a>
&lt;/h1>
&lt;p>在HBase中，RowKey的设计是否合理很大程度上会严重影响DB的读写性能是否均衡。原因在于HBase的数据分片完全是依赖RowKey的字典序来分割Region的；如果新增部分的数据无法均匀的散列在所有的Region中，就会造成只有部分Region的读写量非常之大，而其余的部分则在旁边打酱油。&lt;/p>
&lt;p>推荐采用稳定性Hash算法（比如MD5）作为前缀，比如&lt;/p></description></item><item><title>[HBase] Region Split Policy</title><link>https://linianhui.github.io/hbase/split-policy/</link><pubDate>Sun, 15 May 2022 16:25:00 +0800</pubDate><guid>https://linianhui.github.io/hbase/split-policy/</guid><description>&lt;h1 id="overview">
&lt;i id="locator-overview" class="header-locator">&lt;/i>
&lt;a href="#overview" class="article-h-a">1 概述&lt;/a>
&lt;/h1>
&lt;p>待完善。。。&lt;/p>
&lt;h1 id="config">
&lt;i id="locator-config" class="header-locator">&lt;/i>
&lt;a href="#config" class="article-h-a">2 配置方式&lt;/a>
&lt;/h1>
&lt;h2 id="config-regionserver">
&lt;i id="locator-config-regionserver" class="header-locator">&lt;/i>
&lt;a href="#config-regionserver" class="article-h-a">2.1 RegionServer&lt;/a>
&lt;/h2>
&lt;p>不推荐：原因是不够灵活。&lt;/p>
&lt;p>&lt;code>hbase.regionserver.region.split.policy&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。默认配置&lt;code>org.apache.hadoop.hbase.regionserver.SteppingSplitPolicy&lt;/code>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&amp;lt;property&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;name&amp;gt;hbase.regionserver.region.split.policy&amp;lt;/name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;value&amp;gt;org.apache.hadoop.hbase.regionserver.SteppingSplitPolicy&amp;lt;/value&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/property&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="config-table">
&lt;i id="locator-config-table" class="header-locator">&lt;/i>
&lt;a href="#config-table" class="article-h-a">2.2 Table&lt;/a>
&lt;/h2>
&lt;p>推荐：原因是表范围内的配置，每个表可以独立设置适合的策略。&lt;/p>
&lt;p>方式1（不推荐）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>HTableDescriptor tableDesc = &lt;span style="color:#00f">new&lt;/span> HTableDescriptor(&lt;span style="color:#a31515">&amp;#34;test&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tableDesc.setValue(HTableDescriptor.SPLIT_POLICY, ConstantSizeRegionSplitPolicy.class.getName());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tableDesc.addFamily(&lt;span style="color:#00f">new&lt;/span> HColumnDescriptor(Bytes.toBytes(&lt;span style="color:#a31515">&amp;#34;cf1&amp;#34;&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>admin.createTable(tableDesc);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>方式2（推荐）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># old&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hbase&amp;gt; create &lt;span style="color:#a31515">&amp;#39;blog&amp;#39;&lt;/span>, {METADATA =&amp;gt; {&lt;span style="color:#a31515">&amp;#39;SPLIT_POLICY&amp;#39;&lt;/span> =&amp;gt; &lt;span style="color:#a31515">&amp;#39;org.apache.hadoop.hbase.regionserver.ConstantSizeRegionSplitPolicy&amp;#39;&lt;/span>}},{NAME =&amp;gt; &lt;span style="color:#a31515">&amp;#39;cf&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hbase&amp;gt; create &lt;span style="color:#a31515">&amp;#39;blog&amp;#39;&lt;/span>,{CONFIGURATION =&amp;gt; {&lt;span style="color:#a31515">&amp;#39;hbase.regionserver.region.split_restriction.type&amp;#39;&lt;/span> =&amp;gt; &lt;span style="color:#a31515">&amp;#39;KeyPrefix&amp;#39;&lt;/span>,&lt;span style="color:#a31515">&amp;#39;hbase.regionserver.region.split_restriction.prefix_length&amp;#39;&lt;/span> =&amp;gt; &lt;span style="color:#a31515">&amp;#39;1&amp;#39;&lt;/span>}},{NAME=&amp;gt;&lt;span style="color:#a31515">&amp;#39;cf&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="RegionSplitPolicy">
&lt;i id="locator-RegionSplitPolicy" class="header-locator">&lt;/i>
&lt;a href="#RegionSplitPolicy" class="article-h-a">3 RegionSplitPolicy&lt;/a>
&lt;/h1>
&lt;p>&lt;code>RegionSplitPolicy&lt;/code>的继承关系如下:&lt;/p>
&lt;ol>
&lt;li>&lt;code>RegionSplitPolicy&lt;/code>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>
&lt;ol>
&lt;li>&lt;code>DisabledRegionSplitPolicy&lt;/code>&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/li>
&lt;li>&lt;code>ConstantSizeRegionSplitPolicy&lt;/code>&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;/li>
&lt;li>&lt;code>IncreasingToUpperBoundRegionSplitPolicy&lt;/code>&lt;sup id="fnref:6">&lt;a href="#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>
&lt;ol>
&lt;li>&lt;code>SteppingSplitPolicy&lt;/code>&lt;sup id="fnref1:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;li>&lt;code>KeyPrefixRegionSplitPolicy&lt;/code>&lt;sup id="fnref:7">&lt;a href="#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>&lt;/li>
&lt;li>&lt;code>DelimitedKeyPrefixRegionSplitPolicy&lt;/code>&lt;sup id="fnref:8">&lt;a href="#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>&lt;/li>
&lt;li>&lt;code>BusyRegionSplitPolicy&lt;/code>&lt;sup id="fnref:9">&lt;a href="#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="RegionSplitRestriction">
&lt;i id="locator-RegionSplitRestriction" class="header-locator">&lt;/i>
&lt;a href="#RegionSplitRestriction" class="article-h-a">4 RegionSplitRestriction&lt;/a>
&lt;/h1>
&lt;p>&lt;code>KeyPrefixRegionSplitPolicy&lt;/code>&lt;sup id="fnref1:7">&lt;a href="#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>和&lt;code>DelimitedKeyPrefixRegionSplitPolicy&lt;/code>&lt;sup id="fnref1:8">&lt;a href="#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>在源码中已被标记为&lt;code>@Deprecated&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> * A custom RegionSplitPolicy implementing a SplitPolicy that groups
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> * rows by a prefix of the row-key
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> * This ensures that a region is not split &amp;#34;inside&amp;#34; a prefix of a row key.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> * I.e. rows can be co-located in a region by their prefix.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> * @deprecated since 2.4.3 and will be removed in 4.0.0. Use {@link RegionSplitRestriction},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> * instead.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@Deprecated
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@InterfaceAudience.Private
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">public&lt;/span> &lt;span style="color:#00f">class&lt;/span> &lt;span style="color:#2b91af">KeyPrefixRegionSplitPolicy&lt;/span> &lt;span style="color:#00f">extends&lt;/span> IncreasingToUpperBoundRegionSplitPolicy {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">// some code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>推荐使用&lt;code>RegionSplitRestriction&lt;/code>&lt;sup id="fnref:10">&lt;a href="#fn:10" class="footnote-ref" role="doc-noteref">10&lt;/a>&lt;/sup>代替。目前包含&lt;code>KeyPrefixRegionSplitRestriction&lt;/code>&lt;sup id="fnref:11">&lt;a href="#fn:11" class="footnote-ref" role="doc-noteref">11&lt;/a>&lt;/sup>和&lt;code>DelimitedKeyPrefixRegionSplitRestriction&lt;/code>&lt;sup id="fnref:12">&lt;a href="#fn:12" class="footnote-ref" role="doc-noteref">12&lt;/a>&lt;/sup>两种策略。&lt;/p></description></item><item><title>[HBase] KeyValue</title><link>https://linianhui.github.io/hbase/key-value/</link><pubDate>Sun, 16 Jan 2022 09:50:00 +0800</pubDate><guid>https://linianhui.github.io/hbase/key-value/</guid><description>&lt;p>KeyValue&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>是HBase的最底层的核心存储结构，也是数据最终格式持久化的格式。这里分析一下格式细节。&lt;/p>
&lt;h1 id="overview">
&lt;i id="locator-overview" class="header-locator">&lt;/i>
&lt;a href="#overview" class="article-h-a">1 概述&lt;/a>
&lt;/h1>
&lt;p>一个KeyValue代表着一行数据中的具体的某一列。比如你的一行数据有10列，那么最终会有10个KeyValue存储下来（没有修改删除的情况下）。此外KeyValue只有添加操作，没有删除修改的操作。基于以上两点，使得HBase具备列一下的特性：&lt;/p>
&lt;ol>
&lt;li>SchemaLess : 最小存储单元是列，所以可以不必事先定义好有那些行列结构。&lt;/li>
&lt;li>版本管理：只有添加操作，删除和修改是通过新增新版本的KeyValue来处理的。这点和git类似，只增加，不修改。&lt;/li>
&lt;/ol>
&lt;h1 id="format">
&lt;i id="locator-format" class="header-locator">&lt;/i>
&lt;a href="#format" class="article-h-a">2 格式&lt;/a>
&lt;/h1>
&lt;p>任何文件存储本质上都是一堆&lt;code>byte[]&lt;/code>，KeyValue也不例外，它也是一个不固定长度的&lt;code>byte[]&lt;/code>，按照如下的格式定义。&lt;/p></description></item></channel></rss>