<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ps1 on Timetombs</title><link>https://linianhui.github.io/tag/ps1/</link><description>Recent content in Ps1 on Timetombs</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 16 Oct 2025 22:27:26 +0800</lastBuildDate><atom:link href="https://linianhui.github.io/tag/ps1/index.xml" rel="self" type="application/rss+xml"/><item><title>[Git] config</title><link>https://linianhui.github.io/git/config/</link><pubDate>Wed, 15 Jan 2020 20:52:01 +0800</pubDate><guid>https://linianhui.github.io/git/config/</guid><description>&lt;h1 id="config">
&lt;i id="locator-config" class="header-locator">&lt;/i>
&lt;a href="#config" class="article-h-a">1 配置&lt;/a>
&lt;/h1>
&lt;div class="highlight-file highlight-file_opened" id="hf-3932f9879703d2671327ccdcb48db08e">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hf-3932f9879703d2671327ccdcb48db08e','highlight-file_opened')">config.sh&lt;/a>&lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/git/config/config.sh" title="下载 config.sh" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/git/config/config.sh" title="源码 config.sh">&lt;/a>&lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>set -eux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># checkout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.co checkout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.ci commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.alc &lt;span style="color:#a31515">&amp;#39;commit --amend --no-edit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.st &lt;span style="color:#a31515">&amp;#39;status --short --branch&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># branch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.br branch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># pull&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.pr &lt;span style="color:#a31515">&amp;#39;pull --rebase&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># merge&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.mnf &lt;span style="color:#a31515">&amp;#39;merge --no-ff&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># diff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.d diff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.dt difftool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># cherry-pick&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.cp cherry-pick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.last &lt;span style="color:#a31515">&amp;#39;log -1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.lg &lt;span style="color:#a31515">&amp;#34;log --color --graph --pretty=format:&amp;#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; --abbrev-commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># count-objects&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.size &lt;span style="color:#a31515">&amp;#39;count-objects -v -H&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># reflog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.rl &lt;span style="color:#a31515">&amp;#34;reflog --format=&amp;#39;%cd %h %gs&amp;#39; --date=format:&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># gc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.warn-expire-reflog &lt;span style="color:#a31515">&amp;#34;reflog expire --expire=now --all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.warn-gc-now &lt;span style="color:#a31515">&amp;#34;gc --prune=now --aggressive&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># chmod +/- x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.chmod644 &lt;span style="color:#a31515">&amp;#34;update-index --chmod=-x&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.chmod755 &lt;span style="color:#a31515">&amp;#34;update-index --chmod=+x&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># head&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global alias.head &lt;span style="color:#a31515">&amp;#39;symbolic-ref HEAD&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># default branch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global init.defaultBranch main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># gui&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global gui.encoding &lt;span style="color:#a31515">&amp;#39;utf-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># i18n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global i18n.commitencoding &lt;span style="color:#a31515">&amp;#39;utf-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.quotepath false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># editor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.editor &lt;span style="color:#a31515">&amp;#34;code -w&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.autocrlf false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.safecrlf true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.filemode false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># color&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global color.ui true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># branch pager&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global pager.branch false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/microsoft/Git-Credential-Manager-Core&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global credential.helper manager-core&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>

&lt;h1 id="reference">
&lt;i id="locator-reference" class="header-locator">&lt;/i>
&lt;a href="#reference" class="article-h-a">2 参考&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://git-scm.com/docs/git-config"

 target="_blank" rel="noopener norefferrer">https://git-scm.com/docs/git-config&lt;/a>&lt;/p></description></item><item><title>[PowerShell] Script</title><link>https://linianhui.github.io/powershell/script/</link><pubDate>Sat, 29 Jul 2017 09:42:01 +0800</pubDate><guid>https://linianhui.github.io/powershell/script/</guid><description>&lt;h1 id="script-highlight-files">
&lt;i id="locator-script-highlight-files" class="header-locator">&lt;/i>
&lt;a href="#script-highlight-files" class="article-h-a">1 Script File List&lt;/a>
&lt;/h1>
&lt;div class="highlight-files">
 &lt;div class="highlight-files-header">bat文件列表&lt;/div>
 &lt;div class="highlight-files-list">&lt;div class="highlight-file" id="hfs-0f6907f14f2ff83a2be610e30e0d8b41">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-0f6907f14f2ff83a2be610e30e0d8b41','highlight-file_opened')">reboot-bios.bat&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/reboot-bios.bat" title="下载 reboot-bios.bat" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/reboot-bios.bat" title="源码 reboot-bios.bat">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bat" data-lang="bat">&lt;span style="display:flex;">&lt;span>shutdown /r /fw /t 0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;/div>
&lt;/div>
&lt;div class="highlight-files">
 &lt;div class="highlight-files-header">ps1文件列表&lt;/div>
 &lt;div class="highlight-files-list">&lt;div class="highlight-file" id="hfs-a9ef0d52469cdc7702673e46f90dfff9">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-a9ef0d52469cdc7702673e46f90dfff9','highlight-file_opened')">a.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/a.ps1" title="下载 a.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/a.ps1" title="源码 a.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">#####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># current user powershell profile entry script file.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">#####################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># params&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">Param&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [switch]$Init = $False,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$GitUserName = &lt;span style="color:#a31515">&amp;#39;lnh&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$GitUserEmail = &lt;span style="color:#a31515">&amp;#39;lnhdyx@outlook.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/link.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/os.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/function.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/log.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/convert.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/env.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/file.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/git.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/vscode.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/gui.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/hosts.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/profile.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/prompt.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/sln.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/ui.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/vm.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/http.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/yaml.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/ip.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/k8s.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/docker.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/blog.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/java.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/wlan.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/directory.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/idea.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/auto-complete.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/fast-copy.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/dism.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/hiwifi.ps1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;/alias.ps1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) | Foreach-Object { . &lt;span style="color:#a31515">&amp;#34;&lt;/span>$PSScriptRoot$_&lt;span style="color:#a31515">&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">if&lt;/span> ($Init) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Profile-AddScriptFile -ProfilePath $PROFILE -ScriptFilePath $PSCOMMANDPATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-SetGlobalAlias
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-SetGlobalConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-SetGlobalUser -UserName $GitUserName -UserEmail $GitUserEmail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-GetConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># Update-Help&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Git-ImportPoshGit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Kubernetes-ImportPSKubectlCompletion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># UI-SetDisplayOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;Get-ExecutionPolicy&amp;#39;&lt;/span> -Value $(Get-ExecutionPolicy)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-a704c48a3d1edbcb77acd61cf47621f3">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-a704c48a3d1edbcb77acd61cf47621f3','highlight-file_opened')">alias.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/alias.ps1" title="下载 alias.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/alias.ps1" title="源码 alias.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell alias functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name b -Value blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name bs -Value blog-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name d -Value Directory-To
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name dq -Value Directory-Search-Path-List-From-Quick-Access
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name dql -Value Directory-List-Quick-Access
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name c -Value VsCode-Open
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name i -Value Idea-Open
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name dr -Value Docker-Run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name dre -Value Docker-Run-entrypoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name drs -Value Docker-Run-entrypoint-sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name drb -Value Docker-Run-entrypoint-bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name dc -Value docker-compose
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name dm -Value docker-machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name k -Value kubectl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name mk -Value minikube
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name e -Value Gui-OpenExplorer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name g -Value git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name gti -Value git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name hs -Value http-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name hst -Value http-server-temp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name hss -Value http-server-share
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name env -Value Env-GetAllVariable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name path -Value Env-GetPathVariavle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name yj -Value Yaml-ToJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name jy -Value Yaml-FromJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name grep -Value Select-String
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name k8sgtp -Value Kubernetes-GetTerminatedPod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-Alias -Name ja -Value Java-Arthas&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-e7669b265714e6befd9c31fb50ba6f36">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-e7669b265714e6befd9c31fb50ba6f36','highlight-file_opened')">auto-complete.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/auto-complete.ps1" title="下载 auto-complete.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/auto-complete.ps1" title="源码 auto-complete.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/register-argumentcompleter?view=powershell-7.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Register-ArgumentCompleter -CommandName Directory-To -ParameterName Path -ScriptBlock $__QUICK_ACCESS_DIRECTORY_SCRIPT_BLOCK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Register-ArgumentCompleter -CommandName VsCode-Open -ParameterName Path -ScriptBlock $__QUICK_ACCESS_DIRECTORY_SCRIPT_BLOCK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Register-ArgumentCompleter -CommandName Idea-Open -ParameterName Path -ScriptBlock $__QUICK_ACCESS_DIRECTORY_SCRIPT_BLOCK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Register-ArgumentCompleter -CommandName Gui-OpenExplorer -ParameterName Path -ScriptBlock $__QUICK_ACCESS_DIRECTORY_SCRIPT_BLOCK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Register-ArgumentCompleter -Native -CommandName winget -ScriptBlock {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span>($wordToComplete, $commandAst, $cursorPosition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Console]::InputEncoding = [Console]::OutputEncoding = $OutputEncoding = [System.Text.Utf8Encoding]::new()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Local&lt;span style="">:&lt;/span>word = $wordToComplete.Replace(&lt;span style="color:#a31515">&amp;#39;&amp;#34;&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;&amp;#34;&amp;#34;&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Local&lt;span style="">:&lt;/span>ast = $commandAst.ToString().Replace(&lt;span style="color:#a31515">&amp;#39;&amp;#34;&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;&amp;#34;&amp;#34;&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> winget complete --word=&lt;span style="color:#a31515">&amp;#34;&lt;/span>$Local&lt;span style="color:#a31515">:word&amp;#34;&lt;/span> --commandline &lt;span style="color:#a31515">&amp;#34;&lt;/span>$Local&lt;span style="color:#a31515">:ast&amp;#34;&lt;/span> --position $cursorPosition | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [System.Management.Automation.CompletionResult]::new($_, $_, &lt;span style="color:#a31515">&amp;#39;ParameterValue&amp;#39;&lt;/span>, $_)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Register-ArgumentCompleter -Native -CommandName dotnet -ScriptBlock {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span>($wordToComplete, $commandAst, $cursorPosition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dotnet complete --position $cursorPosition $commandAst.ToString() | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [System.Management.Automation.CompletionResult]::new($_, $_, &lt;span style="color:#a31515">&amp;#39;ParameterValue&amp;#39;&lt;/span>, $_)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/module/psreadline/get-psreadlinekeyhandler?view=powershell-7.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Get-PSReadLineKeyHandler&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-34c61d297f946656d8129440150ed75f">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-34c61d297f946656d8129440150ed75f','highlight-file_opened')">blog.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/blog.ps1" title="下载 blog.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/blog.ps1" title="源码 blog.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Hugo-Server() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34; hugo server --config hugo.yml --watch --buildDrafts --forceSyncStatic --panicOnWarning --port 13131&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hugo server --config hugo.yml --watch --buildDrafts --forceSyncStatic --panicOnWarning --port 13131
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Blog() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cd d:/_code/blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Blog-Server() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hugo-Server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-b4a500b2f4378c07aa3d1412ab781680">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-b4a500b2f4378c07aa3d1412ab781680','highlight-file_opened')">convert.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/convert.ps1" title="下载 convert.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/convert.ps1" title="源码 convert.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Byte-Format(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(ValueFromPipeline = $True)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [long]$Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Length -lt 1KB) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Length.ToString(&lt;span style="color:#a31515">&amp;#34;#0B&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Length -lt 1MB) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$(($Length / 1KB)|Double-Half)&lt;span style="color:#a31515">KB&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Length -lt 1GB) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$(($Length / 1MB)|Double-Half)&lt;span style="color:#a31515">MB&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Length -lt 1TB) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$(($Length / 1GB)|Double-Half)&lt;span style="color:#a31515">GB&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Length -lt 1PB) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$(($Length / 1TB)|Double-Half)&lt;span style="color:#a31515">TB&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$(($Length / 1PB)|Double-Half)&lt;span style="color:#a31515">PB&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Double-Half(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(ValueFromPipeline = $True)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Double]$Value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ([System.Math]::Floor($Value).CompareTo($Value) -eq 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> [System.Math]::Floor($Value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> [System.Math]::Round($Value, 1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Mac-Format(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(ValueFromPipeline = $True)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Mac
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Address = $Null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ([System.Net.NetworkInformation.PhysicalAddress]::TryParse($Mac, [ref] $Address) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Hex = $Address.GetAddressBytes() | ForEach-Object { Byte-To-Hex -InputObject $_ }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> [System.String]::Join(&lt;span style="color:#a31515">&amp;#39;:&amp;#39;&lt;/span>, $Hex)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Byte-To-Hex() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(ValueFromPipeline = $True)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [byte]$InputObject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $InputObject.ToString(&lt;span style="color:#a31515">&amp;#39;X2&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-66fb5f9aa2bfa22fe513bd23ff73c6b0">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-66fb5f9aa2bfa22fe513bd23ff73c6b0','highlight-file_opened')">directory.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/directory.ps1" title="下载 directory.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/directory.ps1" title="源码 directory.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$__QUICK_ACCESS_DIRECTORY = [System.Collections.Generic.List[PSObject]]::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$__QUICK_ACCESS_DIRECTORY_SCRIPT_BLOCK = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span>($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameters)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Directory-Search-Path-List-From-Quick-Access -Search $wordToComplete | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [System.Management.Automation.CompletionResult]::new($_.FullPath, $_.FullPath, &lt;span style="color:#a31515">&amp;#39;ParameterValue&amp;#39;&lt;/span>, $_.FullPath)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Directory-Exists-And-Is-Directory {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Path param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (![System.IO.Directory]::Exists($Path)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;path &lt;/span>$Path&lt;span style="color:#a31515"> is not exist.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ([System.IO.File]::Exists($Path)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;path &lt;/span>$Path&lt;span style="color:#a31515"> is a file.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Directory-Get-Abbr {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Name = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Name param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Abbr = &lt;span style="color:#a31515">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Words = $Name.Split(&lt;span style="color:#a31515">&amp;#34; _.-&amp;#34;&lt;/span>.ToCharArray(), [System.StringSplitOptions]::RemoveEmptyEntries);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Words | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Abbr += $_[0];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Abbr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Directory-ConvertToDirObject {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> ($Raw)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $FullPath = $Raw.FullName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Name = (Split-Path -Path $FullPath -Leaf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $NameAbbr = (Directory-Get-Abbr -Name $Name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Parent = (Split-Path -Path $FullPath -Parent);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ParentName = (Split-Path -Path $Parent -Leaf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ParentNameAbbr = (Directory-Get-Abbr -Name $ParentName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Dir = New-Object PSObject -Property @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#Raw = $Raw;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Abbr = &lt;span style="color:#a31515">&amp;#34;&lt;/span>$ParentNameAbbr$NameAbbr&lt;span style="color:#a31515">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NameAbbr = $NameAbbr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FullPath = $FullPath;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Directory-Add-To-Quick-Access {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Directory-Exists-And-Is-Directory -Path $Path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Path $Path | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Test-Path -Path $_.FullName -PathType Container) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $__QUICK_ACCESS_DIRECTORY.Add((Directory-ConvertToDirObject -Raw $_))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Directory-List-Quick-Access {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $__QUICK_ACCESS_DIRECTORY | Format-Table -AutoSize
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Directory-Search-Path-List-From-Quick-Access {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Search = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Search param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ResultWithScopeIndex = [PSObject[][]]::new(10);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $__QUICK_ACCESS_DIRECTORY | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Score = Directory-Search-Score -Dir $_ -Search $Search
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Score -gt -1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ResultWithScopeIndex[$Score] += $_
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [array]::Reverse($ResultWithScopeIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Result = [System.Collections.Generic.List[PSObject]]::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ResultWithScopeIndex | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($_ -ne $NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Result.AddRange($_)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Directory-Search-Score {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> ($Dir, [string] $Search )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Dir.FullPath.Contains($Search, [StringComparison]::OrdinalIgnoreCase)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> 9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Dir.Abbr.Contains($Search, [StringComparison]::OrdinalIgnoreCase)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> 8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Dir.NameAbbr.Contains($Search, [StringComparison]::OrdinalIgnoreCase)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> 7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Filter-Directory-Item -Dir $Dir -Search $Search) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> -1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Filter-Directory-Item {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> ($Dir, [string] $Search )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $StartIndex = 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">for&lt;/span> ($i = 0; $i -lt $Search.Length; $i++) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $char = $Search[$i];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $charIndex = $Dir.FullPath.IndexOf($char, $StartIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($charIndex -eq -1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $FALSE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $StartIndex = $charIndex;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Directory-To {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Path param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Directory-Exists-And-Is-Directory -Path $Path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;cd &lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span>.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Location $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Directory-Add-To-Quick-Access -Path d:/_code/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Directory-Add-To-Quick-Access -Path d:/_github/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Directory-Add-To-Quick-Access -Path d:/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Directory-Add-To-Quick-Access -Path d:/_app/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Directory-Add-To-Quick-Access -Path d:/_cache/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-ea8bfcaab8067b55ba759eac36df02c7">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-ea8bfcaab8067b55ba759eac36df02c7','highlight-file_opened')">dism.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/dism.ps1" title="下载 dism.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/dism.ps1" title="源码 dism.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># FastCopy env functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-Backup-Os {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $SourcePath = &lt;span style="color:#a31515">&amp;#39;c:\&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $TargetPath = &lt;span style="color:#a31515">&amp;#39;f:\_backup\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$OsName = Dism-Get-OsName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Date = $(Get-Date -Format &lt;span style="color:#a31515">&amp;#39;yyyy-MM-dd&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Name = &lt;span style="color:#a31515">&amp;#34;&lt;/span>${OsName}&lt;span style="color:#a31515">-&lt;/span>${Date}&lt;span style="color:#a31515">&amp;#34;&lt;/span>.ToLower();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$ImageFile = &lt;span style="color:#a31515">&amp;#34;&lt;/span>${TargetPath}${OsName}&lt;span style="color:#a31515">.wim&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CaptureImageCommand = &lt;span style="color:#a31515">&amp;#34;DISM /Capture-Image /CaptureDir:&lt;/span>${SourcePath}&lt;span style="color:#a31515"> /Name:&lt;/span>${Name}&lt;span style="color:#a31515"> /ImageFile:&lt;/span>${ImageFile}&lt;span style="color:#a31515">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetImageCommand = &lt;span style="color:#a31515">&amp;#34;DISM /Get-ImageInfo /ImageFile:&lt;/span>$ImageFile&lt;span style="color:#a31515">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $BatFilePath = &lt;span style="color:#a31515">&amp;#34;d:\dism-&lt;/span>${OsName}&lt;span style="color:#a31515">.bat&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CaptureImageCommand | Out-File -FilePath $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetImageCommand | Out-File -Append -FilePath $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Content -Path $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-Backup-Os-Append {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $SourcePath = &lt;span style="color:#a31515">&amp;#39;c:\&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ImageFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetImageCommand = &lt;span style="color:#a31515">&amp;#34;DISM /Get-ImageInfo /ImageFile:&lt;/span>$ImageFile&lt;span style="color:#a31515">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$OsName = Dism-Get-OsName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Date = $(Get-Date -Format &lt;span style="color:#a31515">&amp;#39;yyyy-MM-dd&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Name = &lt;span style="color:#a31515">&amp;#34;&lt;/span>${OsName}&lt;span style="color:#a31515">-&lt;/span>${Date}&lt;span style="color:#a31515">&amp;#34;&lt;/span>.ToLower();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $AppendCommand = &lt;span style="color:#a31515">&amp;#34;DISM /Append-Image /CaptureDir:&lt;/span>${SourcePath}&lt;span style="color:#a31515"> /Name:&lt;/span>${Name}&lt;span style="color:#a31515"> /ImageFile:&lt;/span>$ImageFile&lt;span style="color:#a31515">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $BatFilePath = &lt;span style="color:#a31515">&amp;#34;d:\dism-&lt;/span>${OsName}&lt;span style="color:#a31515">-append.bat&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetImageCommand | Out-File -FilePath $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $AppendCommand | Out-File -Append -FilePath $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetImageCommand | Out-File -Append -FilePath $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Content -Path $BatFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-Get-Image-Info {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ImageFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DISM /Get-ImageInfo /ImageFile&lt;span style="">:&lt;/span>$ImageFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-Get-Intl {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;DISM /Online /Get-Intl&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DISM /Online /Get-Intl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-Get-Lang {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;Get-Culture | Format-List -Property *&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Culture | Format-List -Property *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-Get-OsName {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ComputerInfo = Get-ComputerInfo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$CsName = $ComputerInfo.CsName.Trim().ToLower();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$OsName = $($($ComputerInfo.OsName.ToLower() -Replace &lt;span style="color:#a31515">&amp;#39;microsoft&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;&amp;#39;&lt;/span>).Trim() -Replace &lt;span style="color:#a31515">&amp;#39; &amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;-&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>${CsName}&lt;span style="color:#a31515">-&lt;/span>${OsName}&lt;span style="color:#a31515">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.cnblogs.com/lindexi/p/17679590.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/clean-up-the-winsxs-folder?view=windows-11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/dism-operating-system-package-servicing-command-line-options?view=windows-11#cleanup-image&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-WinSxs-Stats {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;DISM /Online /Cleanup-Image /AnalyzeComponentStore&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DISM /Online /Cleanup-Image /AnalyzeComponentStore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-WinSxs-Clean {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;DISM /online /Cleanup-Image /StartComponentCleanup&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DISM /online /Cleanup-Image /StartComponentCleanup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-WinSxs-Clean-All {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;DISM /online /Cleanup-Image /StartComponentCleanup /ResetBase&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DISM /online /Cleanup-Image /StartComponentCleanup /ResetBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Dism-WinSxs-Repair {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;/Cleanup-Image /RestoreHealth /Source:X:\Sources\install.wim /LimitAccess&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DISM /Online /Cleanup-Image /RestoreHealth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># sfc /scannow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># DISM /Online /Cleanup-Image /RestoreHealth /Source:wim:z:\win11\Sources\install.wim:1 /LimitAccess&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-a26a0c8682ddbabf6b00c7aad229188c">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-a26a0c8682ddbabf6b00c7aad229188c','highlight-file_opened')">docker.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/docker.ps1" title="下载 docker.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/docker.ps1" title="源码 docker.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Docker-Run() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;docker run --rm --tty --interactive&amp;#34;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker run --rm --tty --interactive $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Docker-Run-entrypoint() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;docker run --rm --tty --interactive --entrypoint&amp;#34;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker run --rm --tty --interactive --entrypoint $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Docker-Run-entrypoint-sh() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;docker run --rm --tty --interactive --entrypoint sh&amp;#34;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker run --rm --tty --interactive --entrypoint sh $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Docker-Run-entrypoint-bash() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;docker run --rm --tty --interactive --entrypoint bash&amp;#34;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker run --rm --tty --interactive --entrypoint bash $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-fea61caef1b5125fb09a2e9194e00642">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-fea61caef1b5125fb09a2e9194e00642','highlight-file_opened')">env.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/env.ps1" title="下载 env.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/env.ps1" title="源码 env.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell env functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$APP_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_app\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$HOME_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_home&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$LANG_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_lang\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$CACHE_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_cache\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$CONFIG_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_config\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$DATA_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_data\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$LOG_DIR = &lt;span style="color:#a31515">&amp;#39;d:\_log\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$PATH_SPLIT = &lt;span style="color:#a31515">&amp;#39;;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Env-TrySetVariable (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Variable = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Variable is null!&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Value = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Value is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Target = [System.EnvironmentVariableTarget]::Machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># 输出旧值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$OldValue = [System.Environment]::GetEnvironmentVariable($Variable, $Target);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Info &lt;span style="color:#a31515">&amp;#34;[&lt;/span>$Target&lt;span style="color:#a31515">][&lt;/span>$Variable&lt;span style="color:#a31515">] OLD_VALUE : &amp;#34;&lt;/span> $OldValue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($OldValue -eq $Value) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Warn &lt;span style="color:#a31515">&amp;#34;[&lt;/span>$Target&lt;span style="color:#a31515">][&lt;/span>$Variable&lt;span style="color:#a31515">] NEW_VALUE : &amp;#34;&lt;/span> $Value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># 设置环境变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [System.Environment]::SetEnvironmentVariable($Variable, $Value, $Target)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># 输出新值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$NewValue = [System.Environment]::GetEnvironmentVariable($Variable, $Target);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;[&lt;/span>$Target&lt;span style="color:#a31515">][&lt;/span>$Variable&lt;span style="color:#a31515">] NEW_VALUE : &amp;#34;&lt;/span> $NewValue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Env-TryAppendPathVariable (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$Value = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Value is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Target = [System.EnvironmentVariableTarget]::Machine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Variable = &lt;span style="color:#a31515">&amp;#39;Path&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># 获取旧值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$OldValue = [System.Environment]::GetEnvironmentVariable($Variable, $Target);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [array]$OldValueArray = $OldValue -Split $PATH_SPLIT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># 检测是否已经存在&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($OldValueArray -Contains $Value) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Warn &lt;span style="color:#a31515">&amp;#34;[&lt;/span>$Target&lt;span style="color:#a31515">][&lt;/span>$Variable&lt;span style="color:#a31515">] EXISTS_VALUE : &lt;/span>$Value&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;[&lt;/span>$Target&lt;span style="color:#a31515">][&lt;/span>$Variable&lt;span style="color:#a31515">] APPEND_VALUE : &lt;/span>$Value&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># 追加新值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $OldValueArray += $Value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$NewValue = $($OldValueArray | Where-Object { $_ } | Sort-Object -Unique -CaseSensitive&lt;span style="">:&lt;/span>$false | Join-String -Separator $PATH_SPLIT);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable $Variable -Value $NewValue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-TrySetAll() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Command -Name &lt;span style="color:#a31515">&amp;#39;Env-Set*EnvironmentVariable&amp;#39;&lt;/span> -CommandType Function | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Info &lt;span style="color:#a31515">&amp;#34;RUN : &lt;/span>$($_.Name)&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Invoke-Expression -Command $_.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-GetAllVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem ENV&lt;span style="">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-GetPathVariavle() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ENV:PATH -Split $PATH_SPLIT | Sort-Object
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetXDGEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;XDG_CONFIG_HOME&amp;#39;&lt;/span> -Value $CONFIG_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;XDG_CACHE_HOME&amp;#39;&lt;/span> -Value $CACHE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;XDG_DATA_HOME&amp;#39;&lt;/span> -Value $DATA_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetHomeEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HOME_D&amp;#39;&lt;/span> -Value $HOME_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HOME_APP&amp;#39;&lt;/span> -Value $APP_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HOME_APP_LOG&amp;#39;&lt;/span> -Value $LOG_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HOME_APP_CONFIG&amp;#39;&lt;/span> -Value $CONFIG_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HOME_APP_CACHE&amp;#39;&lt;/span> -Value $CACHE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HOME_APP_DATA&amp;#39;&lt;/span> -Value $DATA_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/MicrosoftArchive/redis/releases&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetRedisEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_REDIS_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_redis\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_REDIS_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.mongodb.org/dl/win32/x86_64-2008plus-ssl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetMongoDBEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MONGO_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_mongo\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_MONGO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.putty.org/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://the.earth.li/~sgtatham/putty/latest/w64/putty.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetPuttyEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_PUTTY_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_putty\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_PUTTY_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/shadowsocks/shadowsocks-windows&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># function Env-SetShadowsocksEnvironmentVariable() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $APP_SHADOWSOCKS_DIR = $APP_DIR + &amp;#39;_shadowsocks\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TryAppendPathVariable -Value $APP_SHADOWSOCKS_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://adoptopenjdk.net/upstream.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://developers.redhat.com/products/openjdk/download&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://arthas.aliyun.com/arthas-boot.jar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetJavaEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_JAVA_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_java\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_ARTHAS_BOOT_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_arthas_boot\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_JAVA_BIN_DIR = $APP_JAVA_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000">#Env-TrySetVariable -Variable &amp;#39;JAVA_TOOL_OPTIONS&amp;#39; -Value &amp;#39;-Dfile.encoding=UTF-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;JAVA_HOME&amp;#39;&lt;/span> -Value $APP_JAVA_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;ARTHAS_BOOT_HOME&amp;#39;&lt;/span> -Value $APP_ARTHAS_BOOT_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_JAVA_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://golang.org/doc/install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetGoEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_GO_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_go\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_GO_BIN_DIR = $APP_GO_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CACHE_GO_DIR = $CACHE_DIR + &lt;span style="color:#a31515">&amp;#39;_go\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;GOROOT&amp;#39;&lt;/span> -Value $APP_GO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;GOCACHE&amp;#39;&lt;/span> -Value $CACHE_GO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_GO_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://rubyinstaller.org/downloads/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetRubyEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_RUBY_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_ruby\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_RUBY_BIN_DIR = $APP_RUBY_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;RUBY_HOME&amp;#39;&lt;/span> -Value $APP_RUBY_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_RUBY_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://nodejs.org/en/download/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://nodejs.org/download/release/latest/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetNodeEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_NODE_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_node\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_NODE_MODULES_DIR = $APP_NODE_DIR + &lt;span style="color:#a31515">&amp;#39;node_modules\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CACHE_NODE_DIR = $CACHE_DIR + &lt;span style="color:#a31515">&amp;#39;_node\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;NODE_PATH&amp;#39;&lt;/span> -Value $APP_NODE_MODULES_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_NODE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> npm config set cache $CACHE_NODE_DIR --global
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> npm config set registry &lt;span style="color:#a31515">&amp;#34;http://registry.npmmirror.com&amp;#34;&lt;/span> --global
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> npm install -g cnpm --registry=http&lt;span style="">:&lt;/span>//registry.npmmirror.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://kotlinlang.org/docs/tutorials/command-line.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetKotlinEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_KOTLIN_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_kotlin\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_KOTLIN_BIN_DIR = $APP_KOTLIN_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_KOTLIN_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://dotnet.github.io/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/dotnet/core/tools/telemetry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetNetEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;DOTNET_CLI_TELEMETRY_OPTOUT&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.python.org/downloads/windows/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Windows x86-64 embeddable zip file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetPythonEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_PYTHON_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_python\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_PYTHON_SCRIPTS_DIR = $APP_PYTHON_DIR + &lt;span style="color:#a31515">&amp;#39;scripts\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_PYTHON_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_PYTHON_SCRIPTS_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/icsharpcode/ILSpy/releases&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetILSpyEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_ILSPY_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_ilspy\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_ILSPY_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.nuget.org/downloads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/nuget/tools/cli-ref-environment-variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetNugetEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_NUGET_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_nuget\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_NUGET_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://developer.android.com/studio/releases/platform-tools.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetADBEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_ADB_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_adb\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_ADB_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.cpuid.com/softwares/cpu-z.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetCPUZEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_CPUZ_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_cpu-z\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_CPUZ_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.techpowerup.com/gpuz/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetGPUZEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_GPUZ_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_gpu-z\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_GPUZ_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># http://www.superpi.net/Download/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetPIEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_PI_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_pi\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_PI_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://maven.apache.org/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://maven.apache.org/settings.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetMavenEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MAVEN_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_maven\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MAVEN_BIN_DIR = $APP_MAVEN_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># for maven 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;MAVEN_HOME&amp;#39;&lt;/span> -Value $APP_MAVEN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># for maven 2 or 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;M2_HOME&amp;#39;&lt;/span> -Value $APP_MAVEN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># http://maven.apache.org/configure.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;MAVEN_OPTS&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;-Xms256m -Xmx1024m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_MAVEN_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://maven.apache.org/configure.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetMvndEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MVND_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_mvnd\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MVND_BIN_DIR = $APP_MVND_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_MVND_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://gradle.org/releases/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.gradle.org/current/userguide/installation.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_environment_variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetGradleEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_GRADLE_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_gradle\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_GRADLE_BIN_DIR = $APP_GRADLE_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CACHE_GRADLE_DIR = $CACHE_DIR + &lt;span style="color:#a31515">&amp;#39;_gradle\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;GRADLE_HOME&amp;#39;&lt;/span> -Value $APP_GRADLE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;GRADLE_USER_HOME&amp;#39;&lt;/span> -Value $CACHE_GRADLE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_GRADLE_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://projects.spring.io/spring-boot/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetSpringBootCliEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_SPRING_BOOT_CLI_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_spring-boot-cli\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_SPRING_BOOT_CLI_BIN_DIR = $APP_SPRING_BOOT_CLI_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_SPRING_BOOT_CLI_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># http://httpd.apache.org/download.cgi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetHttpdEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_HTTPD_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_httpd\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_HTTPD_BIN_DIR = $APP_HTTPD_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_HTTPD_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://jmeter.apache.org/download_jmeter.cgi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetJmeterEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_JMETER_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_jmeter\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_JMETER_BIN_DIR = $APP_JMETER_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_JMETER_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># http://nginx.org/en/download.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetNginxEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_NGINX_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_nginx\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_NGINX_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://kubernetes.io/docs/tasks/tools/install-kubectl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetKubectlEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_KUBECTL_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_kubectl\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CONFIG_KUBECTL_DIR = $CONFIG_DIR + &lt;span style="color:#a31515">&amp;#39;_kubectl\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CONFIG_KUBECTL_CONFIG_FILE = $CONFIG_KUBECTL_DIR + &lt;span style="color:#a31515">&amp;#39;config.yml&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;KUBECONFIG&amp;#39;&lt;/span> -Value $CONFIG_KUBECTL_CONFIG_FILE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_KUBECTL_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/kubernetes/minikube/releases&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># function Env-SetMinikubeEnvironmentVariable() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $APP_MINIKUBE_DIR = $LANG_DIR + &amp;#39;_minikube\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $DATA_MINIKUBE_DIR = &amp;#39;e:\_minikube\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;MINIKUBE_HOME&amp;#39; -Value $DATA_MINIKUBE_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;MINIKUBE_WANTUPDATENOTIFICATION&amp;#39; -Value &amp;#39;false&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;MINIKUBE_WANTREPORTERRORPROMPT&amp;#39; -Value &amp;#39;false&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;CHANGE_MINIKUBE_NONE_USER&amp;#39; -Value &amp;#39;true&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TryAppendPathVariable -Value $APP_MINIKUBE_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.docker.com/engine/reference/commandline/cli/#environment-variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetDockerEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_DOCKER_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_docker\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CONFIG_DOCKER_DIR = $CONFIG_DIR + &lt;span style="color:#a31515">&amp;#39;_docker\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;DOCKER_CONFIG&amp;#39;&lt;/span> -Value $CONFIG_DOCKER_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;DOCKER_HOST&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;tcp://127.0.0.1:2375&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_DOCKER_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.docker.com/machine&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.docker.com/machine/drivers/hyper-v/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># function Env-SetDockerMachineEnvironmentVariable() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $APP_DOCKER_DIR = $APP_DIR + &amp;#39;_docker\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $BOOT2DOCKER_ISO_DIR = &amp;#39;file://&amp;#39; + $APP_DOCKER_DIR + &amp;#39;boot2docker.iso&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $DATA_DOCKER_DIR = &amp;#39;e:\_docker\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;MACHINE_STORAGE_PATH&amp;#39; -Value $DATA_DOCKER_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;MACHINE_NATIVE_SSH&amp;#39; -Value 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;HYPERV_BOOT2DOCKER_URL&amp;#39; -Value $BOOT2DOCKER_ISO_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;HYPERV_VIRTUAL_SWITCH&amp;#39; -Value &amp;#39;HVS&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;HYPERV_CPU_COUNT&amp;#39; -Value 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;HYPERV_MEMORY&amp;#39; -Value 1024&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TrySetVariable -Variable &amp;#39;HYPERV_DISK_SIZE&amp;#39; -Value 10240&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TryAppendPathVariable -Value $APP_DOCKER_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://helm.sh/docs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/helm/helm-www&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/helm/helm/releases&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetHelmEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_HLEM_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_helm\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_HLEM_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/mholt/caddy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://caddyserver.com/docs/cli&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># function Env-SetCaddyEnvironmentVariable() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $APP_CADDY_DIR = $LANG_DIR + &amp;#39;_caddy\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TryAppendPathVariable -Value $APP_CADDY_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://coreos.com/os/docs/1911.5.0/overview-of-ct.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/coreos/container-linux-config-transpiler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># function Env-SetCoreOSEnvironmentVariable() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># $APP_COREOS_DIR = $LANG_DIR + &amp;#39;_coreos\&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># Env-TryAppendPathVariable -Value $APP_COREOS_DIR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetPowerShellEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;POWERSHELL_TELEMETRY_OPTOUT&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;true&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/v2ray/v2ray-core&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetV2RayEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_V2RAY_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_v2ray\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_V2RAY_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetLocaleEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;LC_ALL&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;zh_CN.UTF-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;LANG&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;C.UTF-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.alex-is.de/PHP/fusion/downloads.php?cat_id=4&amp;amp;download_id=9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetASSSDBenchmarkEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_AS_SSD_BENCHMARK_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_as-ssd-benchmark\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_AS_SSD_BENCHMARK_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://crystalmark.info/en/download/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetDiskInfoEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_DISK_INFO_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_disk-info\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_DISK_INFO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/pbatard/rufus&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetRufusEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_RUFUS_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_rufus\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_RUFUS_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/FFmpeg/FFmpeg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetFFmpegEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_FFMPEG_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_ffmpeg\bin&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_FFMPEG_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.rust-lang.org/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetRustEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_RUSTUP_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_rustup\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_CARGO_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_cargo\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_CARGO_BIN_DIR = $APP_CARGO_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://github.com/rust-lang/rustup.rs#environment-variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;RUSTUP_HOME&amp;#39;&lt;/span> -Value $APP_RUSTUP_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;RUSTUP_DIST_SERVER&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;http://mirrors.ustc.edu.cn/rust-static&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;RUSTUP_UPDATE_ROOT&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;http://mirrors.ustc.edu.cn/rust-static/rustup&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://github.com/rust-lang/cargo/blob/master/src/doc/src/reference/environment-variables.md&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;CARGO_HOME&amp;#39;&lt;/span> -Value $APP_CARGO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;RUST_BACKTRACE&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;full&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;RUST_TEST_NOCAPTURE&amp;#39;&lt;/span> -Value &lt;span style="color:#a31515">&amp;#39;0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_CARGO_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/gohugoio/hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetHugoEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_HUGO_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_hugo\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CACHE_HUGO_DIR = $CACHE_DIR + &lt;span style="color:#a31515">&amp;#39;_hugo\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_HUGO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;HUGO_CACHEDIR&amp;#39;&lt;/span> -Value $CACHE_HUGO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://wiki.wireshark.org/TLS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetSslKeyLogFileEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CACHE_SSL_DIR = $CACHE_DIR + &lt;span style="color:#a31515">&amp;#39;_ssl\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $SSLKEYLOGFILE = $CACHE_SSL_DIR + &lt;span style="color:#a31515">&amp;#39;ssl.log&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;SSLKEYLOGFILE&amp;#39;&lt;/span> -Value $SSLKEYLOGFILE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://dev.mysql.com/downloads/mysql/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://dev.mysql.com/doc/refman/8.0/en/windows-install-archive.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://dev.mysql.com/doc/refman/8.0/en/environment-variables.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetMySqlEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MYSQL_DIR = $LANG_DIR + &lt;span style="color:#a31515">&amp;#39;_mysql\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CACHE_MYSQL_DIR = $CACHE_DIR + &lt;span style="color:#a31515">&amp;#39;_mysql\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DATA_MYSQL_DIR = $DATA_DIR + &lt;span style="color:#a31515">&amp;#39;_mysql\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MYSQL_BIN_DIR = $APP_MYSQL_DIR + &lt;span style="color:#a31515">&amp;#39;bin\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $MYSQL_HISTFILE = $CACHE_MYSQL_DIR + &lt;span style="color:#a31515">&amp;#39;.history&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;MYSQL_HOME&amp;#39;&lt;/span> -Value $APP_MYSQL_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;MYSQL_DATA&amp;#39;&lt;/span> -Value $DATA_MYSQL_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TrySetVariable -Variable &lt;span style="color:#a31515">&amp;#39;MYSQL_HISTFILE&amp;#39;&lt;/span> -Value $MYSQL_HISTFILE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_MYSQL_BIN_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/svenstaro/miniserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetMiniServeEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_MINISERVE_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_miniserve\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_MINISERVE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/wagoodman/dive&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetDiveEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_DIVE_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_dive\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_DIVE_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.voidtools.com/zh-cn/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetEverythingEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_EVERYTHING_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_everything\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_EVERYTHING_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># iperf2 https://sourceforge.net/projects/iperf2/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># iperf3 https://iperf.fr/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetIperfEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_IPERF_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_iperf\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_IPERF_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://download.sysinternals.com/files/SysinternalsSuite.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://learn.microsoft.com/zh-cn/sysinternals/downloads/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetSysinternalsEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_SYSINTERNALS_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_sysinternals\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_SYSINTERNALS_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/winscp/winscp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://winscp.net/eng/index.php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://winscp.net/download/WinSCP-6.5.2-Portable.zip/download&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetWinScpEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_WINSCP_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_winscp\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_WINSCP_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/hacdias/webdav&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/hacdias/webdav/releases/download/v5.8.0/windows-amd64-webdav.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetWebDavEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_WEBDAV_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_webdav\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_WEBDAV_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/sigoden/dufs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/sigoden/dufs/releases/download/v0.43.0/dufs-v0.43.0-x86_64-pc-windows-msvc.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetDuFsEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_DUFS_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_dufs\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_DUFS_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.sftpgo.com/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/drakkan/sftpgo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/drakkan/sftpgo/releases/download/v2.6.6/sftpgo_v2.6.6_windows_portable.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetSFTPGoEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_SFTOPGO_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_sftpgo\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_SFTOPGO_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.hibitsoft.ir/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.hibitsoft.ir/HiBitUninstaller/HiBitUninstaller-Portable-3.2.70.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.hibitsoft.ir/HibitStartup/HiBitStartupManager-Portable-2.6.60.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.hibitsoft.ir/HiBitSysynfo/HiBitSysInfo-Portable-2.1.30.zip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetOtherEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_HIBIT_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_hibit\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_HIBIT_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># 杂项工具&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Env-SetOtherEnvironmentVariable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $APP_OTHER_DIR = $APP_DIR + &lt;span style="color:#a31515">&amp;#39;_other\&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Env-TryAppendPathVariable -Value $APP_OTHER_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-a1a1013e2829dd8e82d2d900fce96741">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-a1a1013e2829dd8e82d2d900fce96741','highlight-file_opened')">fast-copy.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/fast-copy.ps1" title="下载 fast-copy.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/fast-copy.ps1" title="源码 fast-copy.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># FastCopy env functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span>($source, $target)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $fcpPath = &lt;span style="color:#a31515">&amp;#39;c:\_fast-copy\fastcopy.exe&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $option = &lt;span style="color:#a31515">&amp;#39;/cmd=diff /open_window /estimate /balloon /error_stop=FALSE /speed=full /stream /acl&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $commonExclude=&lt;span style="color:#a31515">&amp;#39;\$RECYCLE.BIN\;\System Volume Information\;\Recovery\;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $exclude = &lt;span style="color:#a31515">&amp;#34;/exclude=&amp;#39;\_app2\;\_cache\;\_code\;\_data\;\_github\;\_lang\;\_vhd\;\_video2\;&lt;/span>$commonExclude&lt;span style="color:#a31515">&amp;#39;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $command = &lt;span style="color:#a31515">&amp;#34;&lt;/span>$fcpPath&lt;span style="color:#a31515"> &lt;/span>$option&lt;span style="color:#a31515"> &lt;/span>$exclude&lt;span style="color:#a31515"> &lt;/span>&lt;span style="color:#a31515">`&amp;#34;&lt;/span>$source&lt;span style="color:#a31515">`&amp;#34;&lt;/span>&lt;span style="color:#a31515"> /to=&lt;/span>&lt;span style="color:#a31515">`&amp;#34;&lt;/span>$target&lt;span style="color:#a31515">`&amp;#34;&lt;/span>&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug $command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Invoke-Expression $command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy-Driver {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span>($driver, $targetDir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy -source &lt;span style="color:#a31515">&amp;#34;&lt;/span>${driver}&lt;span style="color:#a31515">:\&amp;#34;&lt;/span> -target &lt;span style="color:#a31515">&amp;#34;y:\&lt;/span>${targetDir}&lt;span style="color:#a31515">\&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy-Home {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Driver -driver d -targetDir _home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy-Blob {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Driver -driver e -targetDir _blob
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy-Mirror {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Driver -driver f -targetDir _mirror
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy-Media {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Driver -driver g -targetDir _media
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> PS-Fast-Copy-All {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Blob
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Mirror
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PS-Fast-Copy-Media
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-8f1ef53698ba65e535ad8fc0dbbd42e5">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-8f1ef53698ba65e535ad8fc0dbbd42e5','highlight-file_opened')">file.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/file.ps1" title="下载 file.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/file.ps1" title="源码 file.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell file functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> File-GetBigFiles ([int]$top = 20) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $begin = Get-Date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;begin...&amp;#34;&lt;/span> $begin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Path $(Get-Location) -File -Recurse |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sort-Object Length -Descending |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Select-Object -First $top |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Format-Table -Property @{Label = &lt;span style="color:#a31515">&amp;#34;Size&amp;#34;&lt;/span>; Expression = { ($_.Length / 1MB).ToString((&lt;span style="color:#a31515">&amp;#39;0.000&amp;#39;&lt;/span>)) + &lt;span style="color:#a31515">&amp;#39;MB&amp;#39;&lt;/span> } }, FullName -Wrap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $end = Get-Date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;end...&amp;#34;&lt;/span> $end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;elapsed times&amp;#34;&lt;/span> ($end - $begin)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> File-GetAll {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $(Get-Location)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Path $Path -Directory | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File-GetAll -Path $_
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Path $Path -File | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $_.FullName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> File-Diff {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $PartFile,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $FullFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $PartContent = $(Get-Content $PartFile)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-Content -Path $FullFile | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($PartContent.Contains($_) -eq $FALSE) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $_
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-e6e546d8c70ed639f9658b343ef6e108">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-e6e546d8c70ed639f9658b343ef6e108','highlight-file_opened')">function.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/function.ps1" title="下载 function.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/function.ps1" title="源码 function.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Read-Host-With-Default {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [String]$Prompt,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [String]$DefaultValue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Input = Read-Host -Prompt &lt;span style="color:#a31515">&amp;#34;&lt;/span>$Prompt&lt;span style="color:#a31515">,default &lt;/span>$DefaultValue&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Input = (-not($input))?&lt;span style="color:#a31515">&amp;#34;&lt;/span>$DefaultValue&lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="">:&lt;/span>&lt;span style="color:#a31515">&amp;#34;&lt;/span>$Input&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-host &lt;span style="color:#a31515">&amp;#34;&lt;/span>$Prompt&lt;span style="color:#a31515"> &lt;/span>$Input&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Input
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-9c16c765229165fae1c0f8e14f4f1f97">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-9c16c765229165fae1c0f8e14f4f1f97','highlight-file_opened')">git.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/git.ps1" title="下载 git.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/git.ps1" title="源码 git.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># git functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># import posh-git module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-ImportPoshGit () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Import-Module posh-git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># install posh-git module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-InstallPoshGit () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Install-Module posh-git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># recurse git pull rebase&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-Pull-Rebase-Recurse () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Attributes Directory -Path (Get-Location) | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Path = $_.FullName.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="color:#a31515">`n&lt;/span>&lt;span style="color:#a31515">cd &lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Location $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;git remote -v&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git remote -v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;git symbolic-ref HEAD&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git symbolic-ref HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;git pull --rebase&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git pull --rebase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Location -Path ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-Warn-GC () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;git reflog expire --expire=now --all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git warn-expire-reflog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;git gc --prune=now --aggressive&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git warn-gc-now
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;git count-objects -v -H&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-Warn-GC-Recurse () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Attributes Directory -Path (Get-Location) | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Path = $_.FullName.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="color:#a31515">`n&lt;/span>&lt;span style="color:#a31515">cd &lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Location $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-Warn-GC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Location -Path ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-Size-Recurse () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-ChildItem -Attributes Directory -Path (Get-Location) | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Path = $_.FullName.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="color:#a31515">`n&lt;/span>&lt;span style="color:#a31515">git -C &amp;#39;&lt;/span>$Path&lt;span style="color:#a31515">&amp;#39; count-objects -v -H&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git -C &lt;span style="color:#a31515">&amp;#34;&lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span> size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Git-GetAllObjects () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $gitObjects = git rev-list --objects --all | git cat-file --batch-check=&lt;span style="color:#a31515">&amp;#39;%(objecttype)|%(objectname)|%(objectsize)|%(rest)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $gitObjects
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Git-ConvertToPSObject ($object) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $row = $object.Split(&lt;span style="color:#a31515">&amp;#39;|&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $gitObject = New-Object PSObject -Property @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type = $row[0];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sha = $row[1];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size = [int]($row[2]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path = $row[3];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $gitObject
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Git-GetAllBlobObjects () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $gitBlobObjects = @()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-GetAllObjects | Foreach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($_.StartsWith(&lt;span style="color:#a31515">&amp;#39;blob&amp;#39;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $gitBlobObjects += (Git-ConvertToPSObject $_)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $gitBlobObjects
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-GetBigFiles([int]$top = 20) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $begin = Get-Date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;begin...&amp;#34;&lt;/span> $begin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Git-GetAllBlobObjects |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sort-Object size -Descending |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Select-Object -First $top |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Format-Table -Property sha, @{Label = &lt;span style="color:#a31515">&amp;#34;size&amp;#34;&lt;/span>; Expression = { ($_.size / 1MB).ToString((&lt;span style="color:#a31515">&amp;#39;0.000&amp;#39;&lt;/span>)) + &lt;span style="color:#a31515">&amp;#39;MB&amp;#39;&lt;/span> } }, path -Wrap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $end = Get-Date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;end...&amp;#34;&lt;/span> $end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;elapsed times&amp;#34;&lt;/span> ($end - $begin)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-SetGlobalAlias () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># checkout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.co checkout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.ci commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.alc &lt;span style="color:#a31515">&amp;#39;commit --amend --no-edit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.st &lt;span style="color:#a31515">&amp;#39;status --short --branch&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># branch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.br branch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># pull&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.pr &lt;span style="color:#a31515">&amp;#39;pull --rebase&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># merge&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.mnf &lt;span style="color:#a31515">&amp;#39;merge --no-ff&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># diff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.d diff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.dt difftool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># cherry-pick&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.cp cherry-pick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.last &lt;span style="color:#a31515">&amp;#39;log -1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.lg &lt;span style="color:#a31515">&amp;#34;log --color --graph --pretty=format:&amp;#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; --abbrev-commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># count-objects&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.size &lt;span style="color:#a31515">&amp;#39;count-objects -v -H&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># reflog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.rl &lt;span style="color:#a31515">&amp;#34;reflog --format=&amp;#39;%cd %h %gs&amp;#39; --date=format:&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># gc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.warn-expire-reflog &lt;span style="color:#a31515">&amp;#34;reflog expire --expire=now --all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.warn-gc-now &lt;span style="color:#a31515">&amp;#34;gc --prune=now --aggressive&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># chmod +/- x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.chmod644 &lt;span style="color:#a31515">&amp;#34;update-index --chmod=-x&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.chmod755 &lt;span style="color:#a31515">&amp;#34;update-index --chmod=+x&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># head&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global alias.head &lt;span style="color:#a31515">&amp;#39;symbolic-ref HEAD&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># set global config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-SetGlobalConfig () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global init.defaultBranch main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># gui&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global gui.encoding &lt;span style="color:#a31515">&amp;#39;utf-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># i18n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global i18n.commitencoding &lt;span style="color:#a31515">&amp;#39;utf-8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global core.quotepath false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># editor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global core.editor &lt;span style="color:#a31515">&amp;#34;code -w&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global core.autocrlf false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global core.safecrlf true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global core.filemode false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># color&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global color.ui true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># branch pager&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global pager.branch false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># set git global user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-SetGlobalUser (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $UserName = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;UserName is null!&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $UserEmail = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;UserEmail is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global user.name $UserName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global user.email $UserEmail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># get git user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-GetCurrentUser () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserName = git config user.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserEmail = git config user.email
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$UserName&lt;span style="color:#a31515">@&amp;lt;&lt;/span>$UserEmail&lt;span style="color:#a31515">&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># git get config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-GetConfig ([string]$Name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Values = git config --get-all $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $LocalValues = git config --get-all --local $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GlobalValues = git config --get-all --global $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $SystemValues = git config --get-all --system $Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#a31515">&amp;#34;name : &lt;/span>$Name&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#a31515">&amp;#34;value : &lt;/span>$Values&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#a31515">&amp;#34;local : &lt;/span>$LocalValues&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#a31515">&amp;#34;global : &lt;/span>$GlobalValues&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host &lt;span style="color:#a31515">&amp;#34;system : &lt;/span>$SystemValues&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --list | Sort-Object
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Git-Proxy(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [switch]$set = $False,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [switch]$get = $True,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [switch]$unset = $False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($set) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global http.proxy &lt;span style="color:#a31515">&amp;#39;socks5://192.168.2.123:1080&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($unset) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global --unset http.proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global --unset https.proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global --get http.proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git config --global --get https.proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-1ae0bd0fd1aca2e60d7d0fe4b7ce33e5">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-1ae0bd0fd1aca2e60d7d0fe4b7ce33e5','highlight-file_opened')">github.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/github.ps1" title="下载 github.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/github.ps1" title="源码 github.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/benchmark-http.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/benchmark-nginx.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/blog.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/channel9-downloader.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/chrome-extensions.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/cnblogs-theme.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/code.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/code-guide.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/div.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/docker.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-aspnetcore.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-cake.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-java.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-mongodb.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-oidc.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-rabbitmq.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/example-spring.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/git-web.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/I-love-mommy.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/jvm.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/linianhui.github.io.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/networking.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/networking-programming.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https&lt;span style="">:&lt;/span>//github.com/linianhui/nuget-server.git&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-cf7c9f526bf7229fd5d300f753a74614">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-cf7c9f526bf7229fd5d300f753a74614','highlight-file_opened')">gui.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/gui.ps1" title="下载 gui.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/gui.ps1" title="源码 gui.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Gui-OpenExplorer () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Path param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Directory-Exists-And-Is-Directory -Path $Path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;explorer &lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span>.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> explorer $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-c8ed150a78cd308e6a65a37e353ee5ac">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-c8ed150a78cd308e6a65a37e353ee5ac','highlight-file_opened')">hiwifi.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/hiwifi.ps1" title="下载 hiwifi.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/hiwifi.ps1" title="源码 hiwifi.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>[string]$HIWIFI_GET_UUID_PATH = &lt;span style="color:#a31515">&amp;#39;/cgi-bin/turbo/proxy/router_info&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$HIWIFI_GET_LOCAL_TOKEN_PATH = &lt;span style="color:#a31515">&amp;#39;/local-ssh/api?method=get&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$HIWIFI_OPEN_SSH_PATH = &lt;span style="color:#a31515">&amp;#39;/local-ssh/api?method=valid&amp;amp;data=&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[string]$HIWIFI_CLOSE_SSH_PATH = &lt;span style="color:#a31515">&amp;#39;/local-ssh/api?method=stop&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> HiWifi-Open-Ssh {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $IP = &lt;span style="color:#a31515">&amp;#34;192.168.199.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CloudToken = HiWifi-Calc-CloudToken -IP $IP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Url = &lt;span style="color:#a31515">&amp;#34;http://&amp;#34;&lt;/span> + $IP + $HIWIFI_OPEN_SSH_PATH + $CloudToken
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Invoke-WebRequest -Method GET -Uri $Url
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> HiWifi-Calc-CloudToken() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $IP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UuidUrl = &lt;span style="color:#a31515">&amp;#34;http://&amp;#34;&lt;/span> + $IP + $HIWIFI_GET_UUID_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Uuid = ((Invoke-WebRequest -Method GET -Uri $UuidUrl).Content | ConvertFrom-Json).data.uuid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $LocalTokenUrl = &lt;span style="color:#a31515">&amp;#34;http://&amp;#34;&lt;/span> + $IP + $HIWIFI_GET_LOCAL_TOKEN_PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $LocalToken = ((Invoke-WebRequest -Method GET -Uri $LocalTokenUrl).Content | ConvertFrom-Json).data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CloudToken = HiWifi-Calc-CloudTokenCore -Uuid $Uuid -LocalToken $LocalToken
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $CloudToken;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> HiWifi-Calc-CloudTokenCore() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Uuid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $LocalToken
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Key = HiWifi-Calc-CloudTokenKeyHex -Uuid $Uuid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Data = HiWifi-Calc-CloudTokenDataUtf8 -LocalToken $LocalToken
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $HmacSha1 = New-Object System.Security.Cryptography.HMACSHA1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $HmacSha1.key = [System.Convert]::FromHexString($Key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Hash1 = $HmacSha1.ComputeHash([System.Text.Encoding]::UTF8.GetBytes($Data))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Result = [System.Convert]::ToBase64String($Hash1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> HiWifi-Calc-CloudTokenKeyHex() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Uuid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Stream = [System.IO.MemoryStream]::new()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Writer = [System.IO.StreamWriter]::new($Stream)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Writer.Write($Uuid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Writer.Flush()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Stream.Position = 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Hash = (Get-FileHash -InputStream $Stream -Algorithm SHA1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Hash.Hash;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> HiWifi-Calc-CloudTokenDataUtf8() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $LocalToken
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UsedLocalTokenBase64 = $LocalToken.Substring(0, 40);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UsedLocalTokenBytes = [System.Convert]::FromBase64String($UsedLocalTokenBase64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UsedLocalTokenUtf8 = [System.Text.Encoding]::UTF8.GetString($UsedLocalTokenBytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Time = $UsedLocalTokenUtf8.Substring(17, 13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Int64]$TimeAdd1 = [System.Convert]::ToInt64($Time) + 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Result = $UsedLocalTokenUtf8.Replace($Time, $TimeAdd1.ToString());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $Result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-655e625233fb32e2bba3c71f199b596b">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-655e625233fb32e2bba3c71f199b596b','highlight-file_opened')">hosts.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/hosts.ps1" title="下载 hosts.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/hosts.ps1" title="源码 hosts.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Hosts-Edit () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> code &lt;span style="color:#a31515">&amp;#34;&lt;/span>$ENV:SYSTEMROOT&lt;span style="color:#a31515">\system32\drivers\etc\hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-97f3512767947e2300fb44edb7ebe79c">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-97f3512767947e2300fb44edb7ebe79c','highlight-file_opened')">http.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/http.ps1" title="下载 http.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/http.ps1" title="源码 http.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/svenstaro/miniserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Http-Server() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ValidateSet(&lt;span style="color:#a31515">&amp;#39;dufs&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;sftpgo&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $App = &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $((Get-Location).Path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($App -eq &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Http-Server-Mineserve -Path $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($App -eq &lt;span style="color:#a31515">&amp;#39;dufs&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Http-Server-Dufs -Path $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($App -eq &lt;span style="color:#a31515">&amp;#39;sftpgo&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Http-Server-SFTPGo -Path $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/svenstaro/miniserve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Http-Server-Mineserve() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $((Get-Location).Path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;miniserve --qrcode --upload-files --dirs-first --hide-theme-selector --enable-webdav --interfaces 192.168.2.2 &lt;/span>$Path&lt;span style="color:#a31515"> &lt;/span>$Args&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> miniserve --qrcode --upload-files --dirs-first --hide-theme-selector --enable-webdav --interfaces 192.168.2.2 $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/sigoden/dufs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Http-Server-Dufs() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $((Get-Location).Path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;dufs --bind 192.168.2.2 --port 8080 --allow-all --log-file &lt;/span>${env:HOME_APP_LOG}&lt;span style="color:#a31515">dufs.log &lt;/span>$Path&lt;span style="color:#a31515"> &lt;/span>$Args&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dufs --bind 192.168.2.2 --port 8080 --allow-all --log-file ${env&lt;span style="">:&lt;/span>HOME_APP_LOG}dufs.log $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.sftpgo.com/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Http-Server-SFTPGo() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $((Get-Location).Path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;sftpgo serve --config-dir &lt;/span>${env:HOME_APP}&lt;span style="color:#a31515">/_sftpgo &lt;/span>$Path&lt;span style="color:#a31515"> &lt;/span>$Args&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sftpgo serve --config-dir ${env&lt;span style="">:&lt;/span>HOME_APP}/_sftpgo $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Http-Server-Temp() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ValidateSet(&lt;span style="color:#a31515">&amp;#39;dufs&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;sftpgo&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $App = &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Http-Server -App $App -Path &lt;span style="color:#a31515">&amp;#39;z:/__temp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Http-Server-Share() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ValidateSet(&lt;span style="color:#a31515">&amp;#39;dufs&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;sftpgo&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $App = &lt;span style="color:#a31515">&amp;#39;miniserve&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Http-Server -App $App -Path &lt;span style="color:#a31515">&amp;#39;z:/_share&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-67e2878ac9425be94639c4bdc5bfa173">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-67e2878ac9425be94639c4bdc5bfa173','highlight-file_opened')">idea.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/idea.ps1" title="下载 idea.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/idea.ps1" title="源码 idea.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Idea-Open {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Path param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Directory-Exists-And-Is-Directory -Path $Path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;idea64 &lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span>.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idea64 $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-52526e4c2d738f35ac5d842b24ea095b">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-52526e4c2d738f35ac5d842b24ea095b','highlight-file_opened')">ip.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/ip.ps1" title="下载 ip.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/ip.ps1" title="源码 ip.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell ip functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> IP-SET() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># show all ethernet interfaces&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface ipv4 show interfaces
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $defaultIdx=1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $idx = Read-Host-With-Default -Prompt &lt;span style="color:#a31515">&amp;#34;select interface idx&amp;#34;&lt;/span> -DefaultValue $defaultIdx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># show selected ethernet interface address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface ipv4 show address name=$idx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># set dhcp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $dhcp = Read-Host-With-Default -Prompt &lt;span style="color:#a31515">&amp;#34;set source=[dhcp|static]&amp;#34;&lt;/span> -DefaultValue &lt;span style="color:#a31515">&amp;#39;static&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (&lt;span style="color:#a31515">&amp;#39;dhcp&amp;#39;&lt;/span> -ieq $dhcp) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface ipv4 set address name=$idx source=dhcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-host &lt;span style="color:#a31515">&amp;#34;show interface &lt;/span>$idx&lt;span style="color:#a31515"> current address&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface ipv4 show address name=$idx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $defaultIP = &lt;span style="color:#a31515">&amp;#39;192.168.1.2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ip = Read-Host-With-Default -Prompt &lt;span style="color:#a31515">&amp;#39;set ip&amp;#39;&lt;/span> -DefaultValue $defaultIP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $defaultMask = &lt;span style="color:#a31515">&amp;#39;255.255.255.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $mask = Read-Host-With-Default -Prompt &lt;span style="color:#a31515">&amp;#39;set mask&amp;#39;&lt;/span> -DefaultValue $defaultMask
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $defaultGateway = $defaultIP.Substring(0, $defaultIP.LastIndexOf(&lt;span style="color:#a31515">&amp;#39;.&amp;#39;&lt;/span>)) + &lt;span style="color:#a31515">&amp;#39;.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $gateway = Read-Host-With-Default -Prompt &lt;span style="color:#a31515">&amp;#39;set gateway&amp;#39;&lt;/span> -DefaultValue $defaultGateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface ipv4 set address name=$idx source=static address=$ip mask=$mask gateway=$gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-host &lt;span style="color:#a31515">&amp;#34;netsh interface ipv4 show address name=&lt;/span>$idx&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface ipv4 show address name=$idx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> IP-Port-Forward-Add (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [int] $port,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;netsh interface portproxy add v4tov4 listenport=&lt;/span>$port&lt;span style="color:#a31515"> connectaddress=&lt;/span>$ip&lt;span style="color:#a31515"> connectport=&lt;/span>$port&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface portproxy add v4tov4 listenport=$port connectaddress=$ip connectport=$port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> IP-Port-Forward-Delete (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [int] $port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;netsh interface portproxy delete v4tov4 listenport=&lt;/span>$port&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface portproxy delete v4tov4 listenport=$port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> IP-Port-Forward-Show (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;netsh interface portproxy show all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh interface portproxy show all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-34af6de908c4e0b08329da5a20e39467">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-34af6de908c4e0b08329da5a20e39467','highlight-file_opened')">java.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/java.ps1" title="下载 java.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/java.ps1" title="源码 java.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java-Arthas() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://arthas.gitee.io/install-detail.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;java -jar &lt;/span>${ENV:ARTHAS_BOOT_HOME}&lt;span style="color:#a31515">arthas-boot.jar --repo-mirror aliyun --use-http &lt;/span>$ARGS&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> java -jar ${ENV&lt;span style="">:&lt;/span>ARTHAS_BOOT_HOME}arthas-boot.jar --repo-mirror aliyun --use-http $ARGS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java-Set-Jdk {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ValidateSet(&lt;span style="color:#a31515">&amp;#39;8&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;11&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;17&amp;#39;&lt;/span>, &lt;span style="color:#a31515">&amp;#39;21&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $BasePath = &lt;span style="color:#a31515">&amp;#39;d:\_lang\_java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $JdkPath = $BasePath + $Version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CurrentJdkPath = (Get-Item -Path $BasePath).Target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Info &lt;span style="color:#a31515">&amp;#34;current jdk path : &lt;/span>$CurrentJdkPath&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($JdkPath.Equals($CurrentJdkPath)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Warn &lt;span style="color:#a31515">&amp;#34;not need change&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Warn &lt;span style="color:#a31515">&amp;#34;Remove-Item &lt;/span>$BasePath&lt;span style="color:#a31515"> -Force -Confirm:&lt;/span>$False&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remove-Item $BasePath -Force -Confirm:$False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Info &lt;span style="color:#a31515">&amp;#34;New-Item -ItemType Junction -Path &lt;/span>$BasePath&lt;span style="color:#a31515"> -Target &lt;/span>$JdkPath&lt;span style="color:#a31515"> | Out-Null&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Soft -VirtualPath $BasePath -RealPath $JdkPath | Out-Null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;now jdk path : &lt;/span>$((Get-Item -Path $BasePath).Target)&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> java -version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java8 {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Java-Set-Jdk -Version 8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java11 {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Java-Set-Jdk -Version 11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java17 {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Java-Set-Jdk -Version 17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java21 {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Java-Set-Jdk -Version 21
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Java-Maven-Repository-Soft-Link-Create(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Soft -VirtualPath &lt;span style="color:#a31515">&amp;#39;d:\_lang\_maven\repository&amp;#39;&lt;/span> -RealPath &lt;span style="color:#a31515">&amp;#34;&lt;/span>${ENV:HOME_D}&lt;span style="color:#a31515">\.m2\repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-6656e12c649a13d5aec9724e9a1de8f9">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-6656e12c649a13d5aec9724e9a1de8f9','highlight-file_opened')">k8s.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/k8s.ps1" title="下载 k8s.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/k8s.ps1" title="源码 k8s.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/mziyabo/PSKubectlCompletion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Kubernetes-ImportPSKubectlCompletion () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Import-Module -Name PSKubectlCompletion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Register-KubectlCompletion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Kubernetes-InstallPSKubectlCompletion () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Install-Module PSKubectlCompletion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Kubernetes-GetTerminatedPod() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl get pods -o custom-columns-file=D:\_code\blog\src\k8s\kubectl\terminated-pod.txt --sort-by=&lt;span style="color:#a31515">&amp;#39;{status.containerStatuses[0].lastState.terminated.finishedAt}&amp;#39;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-7675fbbd0adaf5edf77ab6242ebca45d">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-7675fbbd0adaf5edf77ab6242ebca45d','highlight-file_opened')">link.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/link.ps1" title="下载 link.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/link.ps1" title="源码 link.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Link-Soft() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $VirtualPath,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $RealPath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;New-Item -ItemType SymbolicLink -Path &lt;/span>$VirtualPath&lt;span style="color:#a31515"> -Target &lt;/span>$RealPath&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-Item -ItemType SymbolicLink -Path $VirtualPath -Target $RealPath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Link-Reset-Home {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Soft -VirtualPath &lt;span style="color:#a31515">&amp;#34;&lt;/span>${ENV:HOME}&lt;span style="color:#a31515">\&lt;/span>${Path}&lt;span style="color:#a31515">&amp;#34;&lt;/span> -RealPath &lt;span style="color:#a31515">&amp;#34;&lt;/span>${ENV:HOME_D}&lt;span style="color:#a31515">\&lt;/span>${Path}&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Link-Reset-Home-All {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.android&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.dotnet&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.m2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.ssh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.vscode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.nuget&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.gitconfig&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Link-Reset-Home -Path &lt;span style="color:#a31515">&amp;#39;.bash_history&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-975b617c723c1134d9f909c4d8f890c7">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-975b617c723c1134d9f909c4d8f890c7','highlight-file_opened')">log.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/log.ps1" title="下载 log.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/log.ps1" title="源码 log.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Log-Warn() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host $Args -ForegroundColor Yellow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Log-Debug() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host $Args -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Log-Info() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host $Args -ForegroundColor Gray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Log-NameValue(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [int] $NamePadding,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -NoNewline $Name.PadRight($NamePadding)&lt;span style="color:#a31515">&amp;#34; : &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host $Value -ForegroundColor Green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-4287f6c33a11d1bac6fc1d9b9de5a9f6">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-4287f6c33a11d1bac6fc1d9b9de5a9f6','highlight-file_opened')">os.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/os.ps1" title="下载 os.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/os.ps1" title="源码 os.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-d768d46b64e5ed2557a4a5d6a612f053">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-d768d46b64e5ed2557a4a5d6a612f053','highlight-file_opened')">profile.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/profile.ps1" title="下载 profile.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/profile.ps1" title="源码 profile.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell profile functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Profile-New(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ProfilePath = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;ProfilePath is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Test-Path $ProfilePath) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Info &lt;span style="color:#a31515">&amp;#34;# &lt;/span>$ProfilePath&lt;span style="color:#a31515"> already existed.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-Item -Path $Profile -ItemType File -Force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;# Create [&lt;/span>$ProfilePath&lt;span style="color:#a31515">] succeed.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Profile-AddScriptExpression (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ProfilePath = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;ProfilePath is null!&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ScriptExpression = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;ScriptExpression is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Profile-New -ProfilePath $ProfilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ProfileContent = Get-Content -Path $ProfilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($ProfileContent -contains $ScriptExpression) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Info &lt;span style="color:#a31515">&amp;#34;# [&lt;/span>$ScriptExpression&lt;span style="color:#a31515">] already existed in &lt;/span>$ProfilePath&lt;span style="color:#a31515">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-Content -Path $ProfilePath -Value &lt;span style="color:#a31515">&amp;#34;&lt;/span>$ProfileContent&lt;span style="color:#a31515">`r`n&lt;/span>$ScriptExpression&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;# [&lt;/span>$ScriptExpression&lt;span style="color:#a31515">] append to &lt;/span>$ProfilePath&lt;span style="color:#a31515">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Profile-AddScriptFile (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ProfilePath = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;ProfilePath is null!&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $ScriptFilePath = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;ScriptFilePath is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (!(Test-Path $ScriptFilePath)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$ScriptFilePath&lt;span style="color:#a31515"> not found.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Profile-AddScriptExpression -ProfilePath $ProfilePath -ScriptExpression &lt;span style="color:#a31515">&amp;#34;. &amp;#34;&amp;#34;&lt;/span>$ScriptFilePath&lt;span style="color:#a31515">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-6e42c3ca78bbb582b9000f4f2ee8ccc2">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-6e42c3ca78bbb582b9000f4f2ee8ccc2','highlight-file_opened')">prompt.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/prompt.ps1" title="下载 prompt.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/prompt.ps1" title="源码 prompt.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell prompt functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> prompt () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># hold last exit code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $OLD_LASTEXITCODE = $LASTEXITCODE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Now = [System.DateTimeOffset]::Now
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CurrentYearLastDay = New-Object -TypeName System.DateOnly -ArgumentList ($Now.Year, 12, 31)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DateTime = $Now.ToString(&lt;span style="color:#a31515">&amp;#39;yy-MM-dd HH:mm:ss K&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DayOfWeek = [System.Int32]$Now.DayOfWeek
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Week = $DayOfWeek.Equals(0)&lt;span style="color:#00f">?&lt;/span>7&lt;span style="">:&lt;/span>$DayOfWeek
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DayOfYear = $Now.DayOfYear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $WeekOfYear = [System.Math]::Round(($DayOfYear + 7) / 7)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ResidueWeekOfYear = [System.Math]::Round(($CurrentYearLastDay.DayOfYear - $DayOfYear) / 7)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DayOfNewYear = $CurrentYearLastDay.DayOfYear - $DayOfYear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UnixTimeMilliseconds = $Now.ToUnixTimeMilliseconds()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserPrompt = UI-GetUserPrompt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserPromptPrefix = $UserPrompt.Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserPromptText = $UserPrompt.Text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserPromptCurrentPath = $UserPrompt.CurrentPath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -NoNewline &lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="color:#a31515">`n&lt;/span>$UserPromptPrefix&lt;span style="color:#a31515"> &lt;/span>$UserPromptCurrentPath&lt;span style="color:#a31515"> &lt;/span>$DateTime&lt;span style="color:#a31515"> &lt;/span>$UnixTimeMilliseconds&lt;span style="color:#a31515"> w&lt;/span>$Week&lt;span style="color:#a31515">-&lt;/span>$WeekOfYear&lt;span style="color:#a31515">-&lt;/span>$ResidueWeekOfYear&lt;span style="color:#a31515"> d&lt;/span>$DayOfYear&lt;span style="color:#a31515">-&lt;/span>$DayOfNewYear&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Gray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($OLD_LASTEXITCODE -gt 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -NoNewline &lt;span style="color:#a31515">&amp;#34; &lt;/span>$OLD_LASTEXITCODE&lt;span style="color:#a31515">&amp;#34;&lt;/span> -ForegroundColor Red
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># if working directory is git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Get-GitStatus) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># get git user.name and user.email&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GitUser = Git-GetCurrentUser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># show git user.name and user.email&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -NoNewline &lt;span style="color:#a31515">&amp;#34;&lt;/span>&lt;span style="color:#a31515">`n&lt;/span>$UserPromptPrefix&lt;span style="color:#a31515"> &lt;/span>$GitUser&lt;span style="color:#a31515"> :&amp;#34;&lt;/span> -ForegroundColor Gray
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># show git status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host -NoNewline (Write-VcsStatus)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># show current work directory in window title&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># $Host.UI.RawUI.WindowTitle = $UserPromptText&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># reset last exit code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $LASTEXITCODE = $OLD_LASTEXITCODE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#34;&lt;/span>$UserPromptPrefix&lt;span style="color:#a31515"> &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-f367ad41a75c27379312f62f59280f8d">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-f367ad41a75c27379312f62f59280f8d','highlight-file_opened')">sln.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/sln.ps1" title="下载 sln.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/sln.ps1" title="源码 sln.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">########################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell open visual studio sln file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">########################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Sln-GetFiles() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $currentPath = Get-Location
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;current path : &amp;#39;&lt;/span> $currentPath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $slnFiles = Get-ChildItem -Path $currentPath -File -Filter *.sln
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $slnFiles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:Sln-SelectFile($slnFiles) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($slnFiles.Count -eq 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#39;sln file not found.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($slnFiles.Count -eq 1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $slnFiles[0]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [int]$i = 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $slnFiles | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Host $i &lt;span style="color:#a31515">&amp;#39;: &amp;#39;&lt;/span> $_.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $i++
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [int]$index = Read-Host &lt;span style="color:#a31515">&amp;#39;find more sln file, please input index (default 0) :&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $slnFiles[$index]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Sln() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $slnFiles = Sln-GetFiles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $slnFile = Sln-SelectFile $slnFiles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#39;opening... : &amp;#39;&lt;/span> $slnFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Invoke-Item $slnFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-bd521069e620d539dabeb1ff03c3f489">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-bd521069e620d539dabeb1ff03c3f489','highlight-file_opened')">ui.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/ui.ps1" title="下载 ui.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/ui.ps1" title="源码 ui.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell ui functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Ui-Test-Administrator {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CurrentUser = [Security.Principal.WindowsIdentity]::GetCurrent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CurrentPrincipal = New-Object Security.Principal.WindowsPrincipal $CurrentUser;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $CurrentPrincipal.IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:UI-GetUserName() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserName = $ENV:USERNAME.ToLower();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($UserName -eq &lt;span style="color:#a31515">&amp;#39;administrator&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> &lt;span style="color:#a31515">&amp;#39;admin&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $UserName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> script:UI-GetComputerName() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> $ENV:COMPUTERNAME.ToLower();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> UI-GetUserPrompt() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Role = &lt;span style="color:#a31515">&amp;#39;$&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UserName = UI-GetUserName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ComputerName = UI-GetComputerName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CurrentPath = $(Get-Location).ToString().ToLower();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Ui-Test-Administrator) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Role = &lt;span style="color:#a31515">&amp;#39;#&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span> @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Prefix = $Role;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UserName = $UserName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ComputerName = $ComputerName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CurrentPath = $CurrentPath;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text = &lt;span style="color:#a31515">&amp;#34;&lt;/span>$Role&lt;span style="color:#a31515"> &lt;/span>$UserName&lt;span style="color:#a31515">@&lt;/span>$ComputerName&lt;span style="color:#a31515"> &lt;/span>$CurrentPath&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> UI-SetDisplayOptions () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.WindowPosition.X = 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.WindowPosition.Y = 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.BufferSize.Width = 80;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.BufferSize.Height = 2000;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.WindowSize.Width = 80;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.WindowSize.Height = 40;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.MaxWindowSize.Width = 80;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.MaxWindowSize.Height = 40;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.ForegroundColor = &lt;span style="color:#a31515">&amp;#34;White&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Host.UI.RawUI.BackgroundColor = &lt;span style="color:#a31515">&amp;#34;Black&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-63371fadb4bafbc147708cc5530befcd">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-63371fadb4bafbc147708cc5530befcd','highlight-file_opened')">vm.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/vm.ps1" title="下载 vm.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/vm.ps1" title="源码 vm.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># powershell vm(hyper-v) functions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000">################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> vm ([string] $name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ([String]::IsNullOrEmpty($name)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-VM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-VM -Name $name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/module/hyper-v/new-vhd?view=win10-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> vhd-create(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [uint64] $Size = 128GB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;New-VHD -Dynamic -Path &lt;/span>$Path&lt;span style="color:#a31515"> -SizeBytes &lt;/span>$Size&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-VHD `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Dynamic `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Path $Path `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -SizeBytes $Size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://www.altaro.com/hyper-v/customize-vm-powershell/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/module/hyper-v/new-vm?view=win10-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/module/hyper-v/set-vm?view=win10-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://docs.microsoft.com/en-us/powershell/module/hyper-v/set-vmdvddrive?view=win10-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://learn.microsoft.com/zh-cn/windows-server/virtualization/hyper-v/best-practices-for-running-linux-on-hyper-v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Vm-From-Json(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $JsonFilePath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $NamePadding = 22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Test-Path -Path $JsonFilePath -PathType Leaf) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;not_found&amp;#39;&lt;/span> -NamePadding $NamePadding -Value &lt;span style="color:#a31515">&amp;#34;&lt;/span>$JsonFilePath&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;help&amp;#39;&lt;/span> -NamePadding $NamePadding -Value &lt;span style="color:#a31515">&amp;#39;https://linianhui.github.io/powershell/hyper-v/#config&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Ui-Test-Administrator) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;no_permission&amp;#39;&lt;/span> -NamePadding $NamePadding -Value &lt;span style="color:#a31515">&amp;#34;need use administrator&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Json = Get-Content -Path $JsonFilePath | ConvertFrom-Json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VhdPath = ($Json.vhd.path + &lt;span style="color:#a31515">&amp;#34;\&amp;#34;&lt;/span> + $Json.name + &lt;span style="color:#a31515">&amp;#34;.vhdx&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Test-Path -Path $VhdPath -PathType Leaf) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-VHD `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Dynamic `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Path $VhdPath `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -BlockSizeBytes $Json.vhd.blockSize `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -SizeBytes $Json.vhd.size | Out-Null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VM = Get-VM -Name $Json.name -ErrorAction Ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($VM -eq $NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> New-VM `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Name $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Generation $Json.generation `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Path $Json.path `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -SwitchName $Json.net.&lt;span style="color:#00f">switch&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -VHDPath $VhdPath | Out-Null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($VM.Generation -eq 2) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://learn.microsoft.com/en-us/powershell/module/hyper-v/set-vmfirmware?view=windowsserver2019-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-VMFirmware `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -VMName $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -EnableSecureBoot $Json.boot.secure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://learn.microsoft.com/en-us/powershell/module/hyper-v/set-vm?view=windowsserver2019-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-VM `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Name $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -AutomaticStartAction $Json.automatic.start `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -AutomaticStopAction $Json.automatic.stop `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -AutomaticCheckpointsEnabled $Json.automatic.checkpoint `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -CheckpointType $Json.checkpoint.type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-VMIntegrationService -VMName $Json.name | ForEach-Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Enable-VMIntegrationService -VMName $Json.name -Name $_.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># print vm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VM = Get-VM -Name $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;name&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;generation&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.Generation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;path&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;state&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.State
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($VM.Generation -eq 2) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VMFirmware = Get-VMFirmware -VMName $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;boot.secure&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VMFirmware.SecureBoot.ToString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;boot.secure&amp;#39;&lt;/span> -NamePadding $NamePadding -Value &lt;span style="color:#a31515">&amp;#39;Off&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;automatic.start&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.AutomaticStartAction
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;automatic.stop&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.AutomaticStopAction
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;automatic.checkpoint&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.AutomaticCheckpointsEnabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;checkpoint.type&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.CheckpointType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://learn.microsoft.com/en-us/powershell/module/hyper-v/set-vmprocessor?view=windowsserver2019-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-VMProcessor `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -VMName $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Count $Json.cpu.count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CPU = Get-VMProcessor -VMName $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># print cpu&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;cpu.count&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $CPU.Count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># https://learn.microsoft.com/en-us/powershell/module/hyper-v/set-vmmemory?view=windowsserver2019-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-VMMemory `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -VMName $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DynamicMemoryEnabled $True `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -StartupBytes $Json.mem.min `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -MinimumBytes $Json.mem.min `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -MaximumBytes $Json.mem.max
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $MEM = Get-VMMemory -VMName $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># print mem&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;mem.dynamic&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $MEM.DynamicMemoryEnabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;mem.startup&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($MEM.Startup | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;mem.min&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($MEM.Minimum | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;mem.max&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($MEM.Maximum | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Json.net.mac) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set-VMNetworkAdapter `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -VMName $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -StaticMacAddress $Json.net.mac
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VM = Get-VM -Name $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># print net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;net.switch&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.NetworkAdapters[0].SwitchName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;net.connected&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VM.NetworkAdapters[0].Connected
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;net.mac&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($VM.NetworkAdapters[0].MacAddress | Mac-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VHD = Get-VHD -Path $VhdPath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $HDD = Get-VMHardDiskDrive -VMName $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># print hdd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.type&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VHD.VhdType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.path&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VHD.Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.format&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VHD.VhdFormat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.size&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($VHD.Size | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.blocksize&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($VHD.BlockSize | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.fileSize&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ($VHD.FileSize | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.controllerType&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $HDD.ControllerType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.controllerNumber&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $HDD.ControllerNumber
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;vhd.controllerLocation&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $HDD.ControllerLocation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($Json.dvd.iso) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Test-Path -Path $Json.dvd.iso -PathType Leaf) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Get-VMDvdDrive -VMName $Json.name) -eq $Null) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add-VMDvdDrive `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -VMName $Json.name `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -Path $Json.dvd.iso`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -ErrorAction Ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DVD = Get-VMDvdDrive -VMName $Json.name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($DVD.Path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008000"># print dvd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;dvd.type&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $DVD.DvdMediaType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;dvd.path&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $DVD.Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;dvd.fileSize&amp;#39;&lt;/span> -NamePadding $NamePadding -Value ((Get-Item $DVD.Path).Length | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;dvd.controllerType&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $DVD.ControllerType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;dvd.controllerNumber&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $DVD.ControllerNumber
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;dvd.controllerLocation&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $DVD.ControllerLocation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Vm-To-Json() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $VMName = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;VMName is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $NamePadding = 22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Ui-Test-Administrator) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;no_permission&amp;#39;&lt;/span> -NamePadding $NamePadding -Value &lt;span style="color:#a31515">&amp;#39;need use administrator&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VM = Get-VM -Name $VMName -ErrorAction Ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($VM -eq $NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;not_found&amp;#39;&lt;/span> -NamePadding $NamePadding -Value $VMName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $AutomaticJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;start&amp;#39;&lt;/span> = $VM.AutomaticStartAction.ToString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;stop&amp;#39;&lt;/span> = $VM.AutomaticStopAction.ToString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;checkpoint&amp;#39;&lt;/span> = $VM.AutomaticCheckpointsEnabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CheckpointJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;type&amp;#39;&lt;/span> = $VM.CheckpointType.ToString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $BootJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;secure&amp;#39;&lt;/span> = &lt;span style="color:#a31515">&amp;#39;Off&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ($VM.Generation -eq 2) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Boot = Get-VMFirmware -VMName $VM.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $BootJson.secure = $Boot.SecureBoot.ToString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Cpu = Get-VMProcessor -VMName $VM.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $CpuJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;count&amp;#39;&lt;/span> = $Cpu.Count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Mem = Get-VMMemory -VMName $VM.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $MemJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;min&amp;#39;&lt;/span> = ($Mem.Minimum | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;max&amp;#39;&lt;/span> = ($Mem.Maximum | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $NetJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;switch&amp;#39;&lt;/span> = $VM.NetworkAdapters[0].SwitchName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;mac&amp;#39;&lt;/span> = ($VM.NetworkAdapters[0].MacAddress | Mac-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VhdPath = (Get-VMHardDiskDrive -VMName $VM.Name)[0].Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Vhd = Get-VHD -Path $VhdPath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $VhdJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;path&amp;#39;&lt;/span> = (Get-ChildItem -Path $Vhd.Path).DirectoryName.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;size&amp;#39;&lt;/span> = ($Vhd.Size | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;blockSize&amp;#39;&lt;/span> = ($Vhd.BlockSize | Byte-Format)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Dvd = Get-VMDvdDrive -VMName $VM.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $DvdJson = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#34;iso&amp;#34;&lt;/span> = $Dvd.Path?.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Json = [ordered]@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;name&amp;#39;&lt;/span> = $VM.Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;generation&amp;#39;&lt;/span> = $VM.Generation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;path&amp;#39;&lt;/span> = $VM.Path.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;automatic&amp;#39;&lt;/span> = $AutomaticJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;boot&amp;#39;&lt;/span> = $BootJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;checkpoint&amp;#39;&lt;/span> = $CheckpointJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;cpu&amp;#39;&lt;/span> = $CpuJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;mem&amp;#39;&lt;/span> = $MemJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;net&amp;#39;&lt;/span> = $NetJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;vhd&amp;#39;&lt;/span> = $VhdJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a31515">&amp;#39;dvd&amp;#39;&lt;/span> = $DvdJson
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Json | ConvertTo-Json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> vm-run ([string] $name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Ui-Test-Administrator) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;no_permission&amp;#39;&lt;/span> -NamePadding 20 -Value &lt;span style="color:#a31515">&amp;#39;use administrator run vm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-VM -Name $name | Start-VM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> vm-stop ([string] $name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> ((Ui-Test-Administrator) -eq $False) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-NameValue -Name &lt;span style="color:#a31515">&amp;#39;no_permission&amp;#39;&lt;/span> -NamePadding 10 -Value &lt;span style="color:#a31515">&amp;#39;use administrator stop vm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Get-VM -Name $name | Stop-VM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> vm-ssh (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$username,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$hostname,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string]$port = 22) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;run [&lt;/span>$hostname&lt;span style="color:#a31515">] hyper-v vm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-run -name $hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;ssh &lt;/span>$username&lt;span style="color:#a31515">@&lt;/span>$hostname&lt;span style="color:#a31515"> -p &lt;/span>$port&lt;span style="color:#a31515">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh &lt;span style="color:#a31515">&amp;#34;&lt;/span>$username&lt;span style="color:#a31515">@&lt;/span>$hostname&lt;span style="color:#a31515">&amp;#34;&lt;/span> -p $port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> ubt1 () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname ubt1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> ubt2 () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname ubt2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> ubt3 () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname ubt3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> ceos () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname ceos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> deb1 () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname deb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> deb2 () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname deb2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> deb3 () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vm-ssh -username root -hostname deb3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-c9e82ef09aeeaa608918f990a562a2d8">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-c9e82ef09aeeaa608918f990a562a2d8','highlight-file_opened')">vscode.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/vscode.ps1" title="下载 vscode.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/vscode.ps1" title="源码 vscode.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> VsCode-Open {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">param&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter(Mandatory = $TRUE)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [string] $Path = $(&lt;span style="color:#00f">throw&lt;/span> &lt;span style="color:#a31515">&amp;#34;Path param is null!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00f">if&lt;/span> (Directory-Exists-And-Is-Directory -Path $Path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;code &lt;/span>$Path&lt;span style="color:#a31515">&amp;#34;&lt;/span>.ToLower()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> code $Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-aff3d6bf689b7c7baa2e56ed23c8e26c">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-aff3d6bf689b7c7baa2e56ed23c8e26c','highlight-file_opened')">wlan.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/wlan.ps1" title="下载 wlan.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/wlan.ps1" title="源码 wlan.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> WLAN-Export {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;netsh wlan export profile key=clear&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netsh wlan export profile key=clear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;div class="highlight-file" id="hfs-f5d898edb5e15ccd30420bd347336cb4">
 &lt;div class="highlight-file-header">
 &lt;a class="fa fa-plus highlight-file-switch" onclick="blog.toggleClassName('hfs-f5d898edb5e15ccd30420bd347336cb4','highlight-file_opened')">yaml.ps1&lt;/a>
 &lt;a class="fa fa-download highlight-file-download" target="_blank" href="https://linianhui.github.io/powershell/script/yaml.ps1" title="下载 yaml.ps1" download>&lt;/a>
 &lt;a class="fa fa-github" target="_blank" href="https://github.com/linianhui/blog/blob/main/src/powershell/script/yaml.ps1" title="源码 yaml.ps1">&lt;/a>
 &lt;/div>
 &lt;div class="highlight-file-content">&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># https://github.com/jeremyfa/yaml.js&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008000"># cnpm install -yamljs -g&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Yaml-ToJson() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;yaml2json --pretty --indentation 2&amp;#34;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> yaml2json --pretty --indentation 2 $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00f">function&lt;/span> Yaml-FromJson() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log-Debug &lt;span style="color:#a31515">&amp;#34;json2yaml --depth 64 --indentation 2&amp;#34;&lt;/span> $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json2yaml --depth 64 --indentation 2 $Args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
 &lt;/div>&lt;/div>
&lt;/div></description></item></channel></rss>